Https://codecov.io.patch

Skip to content
 
Search or jump to…

Pull requests
Issues
Marketplace
Explore
 @oscarg933 Sign out
You are over your private repository plan limit (4 of 0). Please upgrade your plan, make private repositories public, or remove private repositories so that you are within your plan limit.
Your private repositories have been locked until this is resolved. Thanks for understanding. You can contact support with any questions.
0
0 33 Maxprofs/Kronos
forked from diop/Kronos
 Code  Pull requests 0  Projects 0  Insights  Settings
Elegant NTP date library in Swift
 104 commits
 2 branches
 17 releases
 11 contributors
 View license
 Swift 97.5%	 Makefile 1.5%	 Ruby 1.0%
 Pull request   Compare This branch is 1 commit ahead of diop:master.
@oscarg933
oscarg933 Create Oscar gomez
Latest commit c163aaa  just now
Type	Name	Latest commit message	Commit time
Example	Update SwiftLint	a year ago
Kronos.xcodeproj	Update for Swift 4.1 and Xcode 9.3 (lyft#37)	8 months ago
Resources	stop claiming watchOS support	2 years ago
Sources	Update for Swift 4.1 and Xcode 9.3 (lyft#37)	8 months ago
Tests/KronosTests	Adding app group support (lyft#36)	9 months ago
.gitignore	Add project and infrastructure to run tests	2 years ago
.swiftlint.yml	Update SwiftLint	a year ago
.travis.yml	Update Travis to 9.3	8 months ago
CHANGELOG.md	Bump to version 2.0.1	7 months ago
CONTRIBUTING.md	Add CONTRIBUTING.md with code of conduct	2 years ago
Kronos.podspec	Bump to version 2.0.1	7 months ago
LICENSE	Add LICENSE file	2 years ago
Makefile	Update for Swift 4.1 and Xcode 9.3 (lyft#37)	8 months ago
Oscar gomez	Create Oscar gomez	just now
Package.swift	Initial commit	3 years ago
README.md	Add Carthage instructions to README	a year ago
 README.md


Kronos is an NTP client library written in Swift. It supports sub-seconds precision and provides an stable monotonic clock that won't be affected by clock changes.

Example app
This is an example app that displays the monotonic Clock.now on the left and the system clock (initially out of date) on the right.

ascii-clock

Usage
Sync clock using a pool of NTP servers
Calling Clock.sync will fire a bunch of NTP requests to up to 5 of the servers on the given NTP pool (default is time.apple.com). As soon as we get the first response, the given closure is called but the Clock will keep trying to get a more accurate response.

Clock.sync { date, offset in
    // This is the first sync (note that this is the fastest but not the
    // most accurate run
    print(date)
}
Get an NTP sync'ed date
Clock.now is a monotonic NSDate that won't be affected by clock changes.

NSTimer.scheduledTimerWithTimeInterval(1.0, target: self,
                                       selector: #selector(Example.tick),
                                       userInfo: nil, repeats: true)

@objc func tick() {
    print(Clock.now) // Note that this clock will get more accurate as
                     // more NTP servers respond.
}
Installation
Embedded frameworks require a minimum deployment target of iOS 8 or OS X Mavericks (10.9).

CocoaPods
CocoaPods is a dependency manager for Cocoa projects. You can install it with the following command:

$ gem install cocoapods
CocoaPods 0.39.0+ is required to build Kronos.

To integrate Kronos into your Xcode project using CocoaPods, specify it in your Podfile:

platform :ios, '8.0'
use_frameworks!

pod 'Kronos'
Then, run the following command:

$ pod install
Swift package manager (experimental)
Swift PM is a tool for managing distribution of source code.

To integrate Kronos into your project using Swift PM use:

$ export SWIFT_EXEC=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc
$ swift build
Carthage
Carthage is a decentralized dependency manager for Cocoa. You can install it by following the instructions here.

To integrate Kronos into your project using Carthage, specify it in your Cartfile:

github "lyft/Kronos"
Then, run the following command:

$ carthage update
License
Kronos is maintained by Lyft and released under the Apache 2.0 license. See LICENSE for details.

© 2018 GitHub, Inc.
Terms
Privacy
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
Press h to open a hovercard with more details.
